# we are going to look at approximations of Pi
# as well as looking at the math Module

print(22/7)
print(355/113)

import math

print(9801 / (2206 * math.sqrt(2)))

def archimedes(numSides):
    innerAngelB = 360.0 / numSides


print(archimedes(4))
print(archimedes(8))
print(archimedes(16))


for sides in range(8, 10, 8):
    print(sides, archimedes(sides))

# see the loop above. in addition to the value of pi, print he difference
# between the values calculated by the archimedes function and by math.pi.

# Accumulators

acc = 0
for val in range(1, 6, 1):
    acc = acc + val

print(acc)

# compute the sum of the first 100 even numbers
# compute the sum of the first 50 odd numbers
# compute the average of the first 100 odd numbers
# write a function that returns the average of the first N numbers, where
#   N is a parameter
# write a function called a factorial that computes the product of the first N
#   numbers, where N is a parameter
# Each number in the fibonacci sequence is the sum of the previous two numbers,
#   The first two numbers in the sequence are 1 and 1. compute the 10th
#   Fibonacci number

# A Monto carlo simulation

# ramdom numbers

import random

print(random.random())









































































































































































































































































































































